{"version":3,"sources":["components/OtpForm.jsx","components/PopupModal.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyle","makeStyles","inputStyle","width","height","margin","fontSize","borderRadius","border","linkStyle","cursor","fontWeight","textDecoration","color","btnStyle","marginLeft","background","OtpForm","props","classes","useState","OTP","setOTP","style","textAlign","borderBottom","mobNum","numInputs","isDisabled","hasErrored","errorStyle","onChange","otp","separator","isInputNum","isInputSecure","shouldAutoFocus","value","Link","float","className","onClick","handleClose","setmobile","marginRight","marginTop","Button","length","alert","useStyles","theme","modal","display","alignItems","justifyContent","paper","top","left","transform","position","backgroundColor","palette","boxShadow","shadows","padding","spacing","outline","btnstyle","PopupModal","open","setOpen","variant","Modal","onClose","substring","App","mobile","Input","name","e","target","settingMobileNumber","inputProps","maxLength","marginBottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.052956a3.chunk.js","sourcesContent":["\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport OtpInput from \"react-otp-input\"\r\nimport { useState } from \"react\"\r\nimport { Link, Button } from \"@material-ui/core\"\r\n\r\n\r\nconst useStyle = makeStyles({\r\n    inputStyle: {\r\n        width: \"3rem !important\",\r\n        height: '3rem',\r\n        margin: \"1rem .5rem\",\r\n        fontSize: '2rem',\r\n        borderRadius: \"4px\",\r\n        border: \"1px solid black\"\r\n    },\r\n    linkStyle: {\r\n        fontSize: 'larger',\r\n        cursor: \"pointer\",\r\n        fontWeight: 'bold',\r\n        '&:hover': {\r\n            textDecoration: \"none\",\r\n            color: \"red\"\r\n        }\r\n    },\r\n    btnStyle: {\r\n        marginLeft: \"20%\",\r\n        width: \"60%\",\r\n        background: \"green\",\r\n        border: \"2px solid black\",\r\n        borderRadius: \"25px \",\r\n        color: \"white\",\r\n        fontWeight: \"bold\",\r\n        '&:hover': {\r\n            background: \"red\"\r\n        }\r\n    }\r\n})\r\n\r\nconst OtpForm = (props) => {\r\n    const classes = useStyle();\r\n    const [OTP, setOTP] = useState('')\r\n\r\n\r\n    const handleOtpChange = (otp) => {\r\n        setOTP(otp)\r\n    }\r\n\r\n    const verifyOTP = () => {\r\n        OTP.length===6?\r\n        alert(`Verified successfully, OTP:${OTP}`):alert('Invalid OTP')\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <div>\r\n                <h1 style={{ textAlign: 'center ', borderBottom: \"1px solid rgb(0,0,0,.3)\" }}>Phone Verification</h1>\r\n                <h3 style={{ textAlign: 'center ', color: 'rgb(0,0,0,.5)' }}>{`Enter the OTP you received on ${props.mobNum}XXXX`}</h3>\r\n            </div>\r\n\r\n            <OtpInput\r\n                inputStyle={classes.inputStyle}\r\n                numInputs={6}\r\n                isDisabled={false}\r\n                hasErrored={false}\r\n                errorStyle=\"error\"\r\n                onChange={handleOtpChange}\r\n                separator={<span>-</span>}\r\n                isInputNum={true}\r\n                isInputSecure={false}\r\n                shouldAutoFocus\r\n                value={OTP}\r\n            />\r\n\r\n            <div>\r\n                <Link style={{ float: \"left\", marginLeft: \"2%\" }} className={classes.linkStyle}\r\n                    onClick={() => { props.handleClose(); props.setmobile('') }} >Change Number</Link>\r\n                <Link style={{ float: \"right\", marginRight: \"2%\" }} className={classes.linkStyle} onClick={() => props.handleClose()}>Re-send OTP</Link>\r\n            </div>\r\n            <div style={{ marginTop: \"10%\" }}>\r\n                <Button className={classes.btnStyle} onClick={() => verifyOTP()} >Verify Phone Number</Button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OtpForm","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nimport OtpForm from \"./OtpForm\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        top: `10%`,\r\n        left: `50%`,\r\n        transform: `translate(-50%, 0%)`,\r\n        position: 'absolute',\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        border:\"2px solid red\",\r\n        outline:\"1px solid black\"\r\n    },\r\n    btnstyle:{\r\n        width:\"20%\",\r\n        marginLeft:\"40%\",\r\n        fontSize:\"25px\"\r\n    }\r\n}));\r\n\r\nexport default function PopupModal(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleOpen = () => {\r\n        \r\n        props.mobNum.length===10?setOpen(true):alert(\"Enter a valid Mobile Number\")\r\n        // console.log(props.mobNum);\r\n        \r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button className={classes.btnstyle} variant=\"contained\" color=\"primary\" onClick={handleOpen}>\r\n                Get OTP\r\n            </Button>\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n            >\r\n                <div  className={classes.paper}>\r\n                    <OtpForm mobNum={props.mobNum.substring(0,6)} handleClose={handleClose} setmobile={props.setmobile}/>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import './App.css';\nimport { Input } from '@material-ui/core';\nimport { useState } from 'react';\nimport PopupModal from './components/PopupModal';\n\n\n\nfunction App() {\n\n\n  const [mobile, setmobile] = useState('');\n\n  const settingMobileNumber = (e) => {\n    setmobile(e.target.value)\n  }\n\n\n  return (\n    <div style={{ marginTop: \"10%\" }}>\n      <h2 style={{ textAlign: \"center\" }}>Enter your 10 digit mobile number to get OTP</h2>\n      <Input name=\"phone\" onChange={(e) => settingMobileNumber(e)} inputProps={{ maxLength: 10 }} value={mobile}\n        style={{\n          height: \"4vw\", width: \"10%\", fontSize: \"1.7vw\", marginLeft: \"45%\", marginBottom: \"2vw\", textAlign: \"center\"\n        }} />\n\n      <PopupModal mobNum={mobile} setmobile={setmobile} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}